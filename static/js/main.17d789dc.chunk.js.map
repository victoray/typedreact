{"version":3,"sources":["components/SideBar.tsx","components/NavBar.tsx","api/useGetSpecies.tsx","components/Spinner.tsx","components/Table.tsx","components/HomeScreen.tsx","App.tsx","index.tsx"],"names":["SideBar","visible","className","alt","src","to","NavBar","setVisible","onClick","type","placeholder","useGetSpecies","page","useState","status","result","setResult","useEffect","a","axios","get","response","data","error","console","log","Spinner","handleClick","side","setPage","currentPage","totalPages","Table","service","species","results","map","specie","key","url","name","classification","designation","skin_colors","hair_colors","eye_colors","average_lifespan","language","createTable","count","pageTotal","Math","ceil","pages","_","range","id","toString","colSpan","HomeScreen","style","marginTop","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17d789dc.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface SideBarProps {\n    visible: boolean;\n}\n\n/**\n * SideBar Component: Displays all menu items in  a left fixed sidebar.\n */\nconst SideBar = ({visible}: SideBarProps) => {\n    return (\n        <div className={`ui ${visible && \"visible\"} sidebar left fixed vertical menu`}>\n            <div className=\"item\">\n                <img className=\"ui mini image\" alt={\"\"} src={\"https://semantic-ui.com/images/logo.png\"}/>\n            </div>\n            <Link className=\"item\" to={\"/dashboard\"}>DashBoard <i className=\"chart line icon\"/></Link>\n            <Link className=\"item\" to={\"/starwars\"}>StarWars <i className=\"star icon\"/></Link>\n            <Link className=\"item\" to={\"/avengers\"}>Avengers <i className=\"nintendo switch icon\"/></Link>\n            <Link className=\"item\" to={\"/settings\"}>Settings <i className=\"cogs icon\"/></Link>\n        </div>);\n};\n\nexport default SideBar;\n","import React from \"react\";\n\ninterface NavBarProps {\n    setVisible?: any;\n    visible: boolean;\n}\n\n/**\n *\n * NavBar Component: Displays all menu items in  a horizontal navbar with a right alinged dropdown menu and a search bar\n */\nconst NavBar = ({setVisible, visible}: NavBarProps) => {\n\n    return (\n        <div className=\"ui top fixed menu borderless\">\n            <a className=\"item\" onClick={() => setVisible(!visible)}>\n                <i className=\"sidebar icon\"/>\n                Menu\n            </a>\n            <div className=\"ui  category search item\">\n                <div className=\"ui large icon input\">\n                    <input className=\"prompt\" type=\"text\" placeholder=\"Search...\"/>\n                    <i className=\"search link icon\"/>\n                </div>\n            </div>\n\n            <div className=\"right menu\">\n                <div className=\"ui simple dropdown  item\">\n                    <img className=\"ui avatar image\" src={\"https://semantic-ui.com/images/avatar/small/matt.jpg\"}\n                         alt={\"\"}/>\n                    <span>Username</span> <i className=\"dropdown icon\"/>\n                    <div className=\"menu\">\n                        <div className=\"item link\">Logout <i className=\"sign-out icon\"/></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NavBar;\n","import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {Service, Specie} from \"./types\";\n\n\nexport interface Species {\n    results: Specie [];\n    count: number;\n}\n\n// custom hook for fetching data from swap api\nconst useGetSpecies = (page: number) => {\n\n    const [result, setResult] = useState<Service<Species>>({status: \"loading\"});\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await axios.get(`https://swapi.co/api/species/?page=${page}`);\n                setResult({data: response.data, status: \"loaded\"});\n            } catch (error) {\n                setResult({error, status: \"error\"});\n                console.log(error);\n            }\n        })();\n    }, [page]);\n\n    return result;\n};\n\nexport default useGetSpecies;\n\n","import React from \"react\";\n\n\n/**\n * Displays a spinning loader during data loading.\n */\nconst Spinner = () => {\n\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\"> Loading....</div>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React, {useState} from \"react\";\nimport useGetSpecies, {Species} from \"../api/useGetSpecies\";\nimport _ from \"lodash\";\nimport Spinner from \"./Spinner\";\n\nconst handleClick = (side: string, setPage: any, currentPage: number, totalPages: number) => {\n    if (side === \"right\") {\n        (currentPage < totalPages) ? setPage(currentPage + 1) : setPage(currentPage);\n    }\n    if (side === \"left\") {\n        (currentPage - 1 > 0) ? setPage(currentPage - 1) : setPage(currentPage);\n    }\n};\n\nconst createTable = (species: Species) => {\n    return species.results.map((specie) => {\n        return (\n            <tr key={specie.url}>\n                <td className=\"single line\">\n                    {specie.name}\n                </td>\n                <td className=\"single line\">\n                    {specie.classification}\n                </td>\n                <td className=\"single line\">\n                    {specie.designation}\n                </td>\n                <td className=\"single line\">\n                    {specie.skin_colors}\n                </td>\n                <td className=\"single line\">\n                    {specie.hair_colors}\n                </td>\n                <td className=\"single line\">\n                    {specie.eye_colors}\n                </td>\n                <td className=\"single line\">\n                    {specie.average_lifespan}\n                </td>\n                <td className=\"single line\">\n                    {specie.language}\n                </td>\n            </tr>);\n    });\n};\n\n\nconst Table = () => {\n    const [currentPage, setPage] = useState(1);\n    const service = useGetSpecies(currentPage);\n\n    if (service.status !== \"loaded\") {\n        return <Spinner/>;\n    }\n\n    const species = (service.status === \"loaded\") && createTable(service.data);\n    const count = (service.status === \"loaded\") && service.data.count || 0;\n\n\n    const pageTotal = Math.ceil(count / 10);\n    const pages = _.range(1, pageTotal + 1).map((page) => {\n        return (<div key={page} id={page.toString()} className={`link item ${(currentPage === page) && \"active\"}`}\n                     onClick={() => setPage(page)}>{page}</div>);\n    });\n\n    return (\n        <table className=\"ui fixed  padded table unstackable selectable striped blue\">\n            <thead className={\"full-width\"}>\n            <tr>\n                <th>Name</th>\n                <th>Classification</th>\n                <th>Designation</th>\n                <th>Skin Colors</th>\n                <th>Hair Colors</th>\n                <th>Eye Colors</th>\n                <th>Average Lifespan</th>\n                <th>Language</th>\n            </tr>\n            </thead>\n            <tbody>\n            {species}\n            </tbody>\n            <tfoot>\n            <tr>\n                <th colSpan={8}>\n                    <div className=\"ui right floated pagination menu\">\n                        <div onClick={() => handleClick(\"left\", setPage, currentPage, pageTotal)}\n                             className=\"link icon item\">\n                            <i className=\"left chevron icon\"/>\n                        </div>\n                        {pages}\n                        <div onClick={() => handleClick(\"right\", setPage, currentPage, pageTotal)}\n                             className=\"link icon item\">\n                            <i className=\"right chevron icon\"/>\n                        </div>\n                    </div>\n                </th>\n            </tr>\n            </tfoot>\n        </table>\n    );\n};\n\nexport default Table;\n","import React, {useState} from \"react\";\nimport SideBar from \"./SideBar\";\nimport NavBar from \"./NavBar\";\nimport Table from \"./Table\";\n\n\n/**\n *\n * HomeScreen Component: This is the main screen of the app, hosting the SideBar and NavBar as child components.\n */\nconst HomeScreen = () => {\n    const [visible, setVisible] = useState(false);\n\n    return (\n        <div className={\"container\"}>\n            <SideBar visible={visible}/>\n            <NavBar setVisible={setVisible} visible={visible}/>\n            <div className=\"pusher\">\n                <div className={\"ui container\"} style={{marginTop: \"100px\"}}>\n                    <Table/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route path={\"/\"} component={HomeScreen}/>\n                <Route path={\"/dashboard\"} component={HomeScreen}/>\n                <Route path={\"/starwars\"} component={HomeScreen}/>\n                <Route path={\"/avengers\"} component={HomeScreen}/>\n                <Route path={\"/settings\"} component={HomeScreen}/>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n\n","import \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n// @ts-ignore\n"],"sourceRoot":""}